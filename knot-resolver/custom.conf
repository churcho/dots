-- respect entries from /etc/hosts
hints.add_hosts()

-- Enable DNSSEC validation
-- See https://knot-resolver.readthedocs.io/en/latest/daemon.html#enabling-dnssec for more help
-- https://knot-resolver.readthedocs.io/en/stable/config-dnssec.html
-- https://knot-resolver-test.readthedocs.io/en/latest/daemon.html#enabling-dnssec
-- Must first add an anchor file using:
-- kdig DNSKEY . @k.root-servers.net +noall +answer | grep "DNSKEY[[:space:]]257" > /etc/knot-resolver/root.keys
-- The above is the equivalent of using `unbound-anchor -a "/etc/knot-resolver/root.keys"`
-- ldns-key2ds -n /etc/knot-resolver/root.keys
trust_anchors.add_file('/etc/knot-resolver/root.keys', true)

--dofile('/etc/knot-resolver/adblock.conf')
--dofile('/etc/knot-resolver/whitelist.conf')

-- Custom blocklist
--hints.add_hosts('/etc/knot-resolver/hosts.custom')

modules = { 'daf' }
--dofile('/etc/knot-resolver/adblock.conf')
daf.add 'src = 127.0.0.0/8 rewrite example.com A 0.0.0.0'

-- log failed DNSSEC validations
modules.load('bogus_log')

-- Enable query logging
-- create the dnstap socket using:
-- doas -u knot-resolver fstrm_capture -t protobuf:dnstap.Dnstap -u /tmp/dnstap.sock -w /tmp/fstrm.tap
modules = {
    dnstap = {
        socket_path = "/tmp/dnstap.sock",
        log_responses = true
    }
}
